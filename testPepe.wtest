import pepe.*

describe "Sueldo Pepe" {
	
	test "pepe recibe sueldo neto de gerente" {
		pepe.categoria(categoriaGerente)

		assert.equals(categoriaGerente, pepe.categoriaActual())
		assert.equals(15000, pepe.sueldoNeto())
	}

	test "pepe recibe sueldo de cadete"	{
		pepe.categoria(categoriaCadete)

		assert.equals(20000, pepe.sueldoNeto())
	}

	test "pepe recibe bono resultado por porcentaje" {
		pepe.bonoResultado(bonoResultadoPorcentaje)

		pepe.categoria(categoriaCadete)
		assert.equals(2000,pepe.bonoResultadoRecibido())

		pepe.categoria(categoriaGerente)
		assert.equals(1500,pepe.bonoResultadoRecibido())
	}

	test "pepe recibe bono resultado por monto fijo" {
		pepe.bonoResultado(bonoResultadoMontoFijo)

		assert.equals(800,pepe.bonoResultadoRecibido())
	}

	test "pepe recibe bono resultado nulo" {
		pepe.bonoResultado(bonoNulo)

		assert.equals(0,pepe.bonoResultadoRecibido())
	}

	test "pepe recibe bono presentismo normal" {
		pepe.bonoPresentismo(bonoPresentismoNormal)

		pepe.faltas(0)
		assert.equals(2000, pepe.bonoPresentismoRecibido())

		pepe.faltas(1)
		assert.equals(1000, pepe.bonoPresentismoRecibido())

		pepe.faltas(3)
		assert.equals(0, pepe.bonoPresentismoRecibido())

		pepe.faltas(1000)
		assert.equals(0, pepe.bonoPresentismoRecibido())

		pepe.faltas(-1)
		assert.equals(0, pepe.bonoPresentismoRecibido())
	}

	test "pepe recibe bono presentismo ajuste y funciona correctamente" {
		pepe.BonoPresentismo("ajuste")

		pepe.faltas(0)
		assert.equals(100, pepe.bonoPresentismoRecibido())

		pepe.faltas(1)
		assert.equals(0, pepe.bonoPresentismoRecibido())

		pepe.faltas(100)
		assert.equals(0, pepe.bonoPresentismoRecibido())
	}

	test "pepe recibe bono presentismo ajuste y funciona correctamente" {
		pepe.bonoPresentismo("demagogico")

		pepe.sueldoNeto(10000)
		assert.equals(500, pepe.bonoPresentismoRecibido())

		pepe.sueldoNeto(18000)
		assert.equals(300, pepe.bonoPresentismoRecibido())

		pepe.sueldoNeto(0)
		assert.equals(500, pepe.bonoPresentismoRecibido())

		pepe.sueldoNeto(-1)
		assert.equals(500, pepe.bonoPresentismoRecibido())
	}

	test "pepe recibe bono presentismo ajuste y funciona correctamente" {
		pepe.bonoPresentismo("nulo")
		
		assert.equals(0, pepe.bonoPresentismoRecibido())
	}
}